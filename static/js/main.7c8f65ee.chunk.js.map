{"version":3,"sources":["components/tab.js","components/expimage.js","components/about.js","components/projects.js","components/contact.js","components/home.js","components/scrolltopbutton.js","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["Tab","title","this","props","onClick","className","active","join","Component","ExpImage","handleClick","bind","state","expanded","e","cont","document","createElement","bigImage","classList","add","onclick","parentNode","removeChild","src","target","getAttribute","appendChild","querySelector","alt","About","class","Projects","Project","desc","width","height","controls","type","Contact","href","Home","id","onButtonPress","ScrollTopButton","NavBar","setState","activeTab","scrolled","handleScroll","handleScrollClick","window","addEventListener","removeEventListener","scrollTo","scrollY","content","tabTitle","scrollTopButton","React","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAEqBA,E,uKAEnB,OACC,yBAAKC,MAAOC,KAAKC,MAAMF,MAAOG,QAASF,KAAKC,MAAMC,QAASC,UAAW,CAACH,KAAKC,MAAMG,SAAWJ,KAAKC,MAAMF,OAAS,SAAU,kBAAkBM,KAAK,MACjJ,uBAAGN,MAAOC,KAAKC,MAAMF,OAAQC,KAAKC,MAAMF,Y,GAJXO,aCAZC,E,kDAIpB,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,CAACC,UAAU,GAHP,E,wDAYNC,GACX,IAAIC,EAAOC,SAASC,cAAc,OAC3BC,EAAWF,SAASC,cAAc,OACtCF,EAAKI,UAAUC,IAAI,cACnBL,EAAKM,QAAU,WACdN,EAAKO,WAAWC,YAAYR,IAE7BG,EAASC,UAAUC,IAAI,mBACvBF,EAASM,IAAMV,EAAEW,OAAOC,aAAa,OACrCX,EAAKY,YAAYT,GACjBF,SAASY,cAAc,QAAQD,YAAYZ,K,+BAI9C,OACC,yBAAKS,IAAKtB,KAAKC,MAAMqB,IAAKK,IAAI,GAAGzB,QAASF,KAAKQ,kB,GA/BZF,aCCvB,SAASsB,IACvB,OACC,yBAAKC,MAAM,kBACV,yBAAKA,MAAM,QACV,uCACA,gXACA,kBAAC,EAAD,CAAUP,IAAI,mVCPH,SAASQ,IACvB,OACC,yBAAKD,MAAM,kBACV,kBAACE,EAAD,CAAShC,MAAM,QAAQiC,KAAK,2LAA2LV,IAAI,oBAC3N,kBAACS,EAAD,CAAShC,MAAM,cAAciC,KAAK,0BAA0BV,IAAI,oBAChE,kBAACS,EAAD,CAAShC,MAAM,gBAAgBiC,KAAK,0EAA0EV,IAAI,oBAClH,kBAACS,EAAD,CAAShC,MAAM,gBAAgBiC,KAAK,0EAA0EV,IAAI,qBAKrH,SAASS,EAAQ9B,GAChB,OACC,yBAAKE,UAAU,WACd,0BAAM0B,MAAM,gBACX,4BAAK5B,EAAMF,OACX,2BAAIE,EAAM+B,OAEX,2BAAOH,MAAM,cAAcI,MAAO,IAAKC,OAAQ,IAAKC,UAAQ,GAC3D,4BAAQb,IAAKrB,EAAMqB,IAAKc,KAAK,gBClBlB,SAASC,IACvB,OACC,yBAAKR,MAAM,kBACV,yBAAKA,MAAM,aACV,kBAAC,EAAD,CAAUP,IAAI,cACd,uBAAGgB,KAAK,qCAAqCT,MAAM,UAAnD,UAED,yBAAKA,MAAM,aACV,kBAAC,EAAD,CAAUP,IAAI,+EACd,uBAAGgB,KAAK,4CAA4CT,MAAM,UAA1D,aAED,yBAAKA,MAAM,aACV,kBAAC,EAAD,CAAUP,IAAI,8EACd,uBAAGgB,KAAK,+BAA+BT,MAAM,UAA7C,YCbW,SAASU,EAAKtC,GAC5B,OACC,6BACC,yBAAKE,UAAU,OAAOqC,GAAG,WACxB,iEAED,yBAAKrC,UAAU,kBAEd,yBAAKA,UAAU,mBACd,6DACA,yBAAKA,UAAU,oBACd,uBAAGmC,KAAK,IAAInC,UAAU,SAASD,QAASD,EAAMwC,cAAe1C,MAAM,SAAnE,YACA,uBAAGuC,KAAK,IAAInC,UAAU,SAASD,QAASD,EAAMwC,cAAe1C,MAAM,YAAnE,YACA,uBAAGuC,KAAK,IAAInC,UAAU,SAASD,QAASD,EAAMwC,cAAe1C,MAAM,WAAnE,gBAGF,kBAAC,EAAD,CAAUuB,IAAI,eAAekB,GAAG,e,IChBfE,E,uKAGnB,OACC,uBAAGJ,KAAK,IAAIT,MAAM,2BAA2B3B,QAASF,KAAKC,MAAMC,SAAjE,mB,GAJ0CI,aCKxBqC,E,kDACpB,WAAY1C,GAAO,IAAD,8BACjB,cAAMA,IAOPO,YAAc,SAACI,GACd,EAAKgC,SAAS,CAACC,UAAWjC,EAAEW,OAAOC,aAAa,YAPhD,EAAKd,MAAQ,CAACmC,UAAW,WAAYC,UAAU,GAC/C,EAAKtC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKsC,aAAe,EAAKA,aAAatC,KAAlB,gBACpB,EAAKuC,kBAAoB,EAAKA,kBAAkBvC,KAAvB,gBALR,E,gEAajBwC,OAAOC,iBAAiB,SAAUlD,KAAK+C,gB,6CAIvCE,OAAOE,oBAAoB,SAAUnD,KAAK+C,gB,wCAGzBnC,GACjBqC,OAAOG,SAAS,EAAG,GACnBpD,KAAK4C,SAAS,CAACE,UAAU,M,mCAGblC,GACZZ,KAAK4C,SAAS,CAACE,UAAU,IACtBG,OAAOI,SAAW,KAAKrD,KAAK4C,SAAS,CAACE,UAAU,M,+BAG3C,IAEJQ,EAFG,OACDC,EAAWvD,KAAKU,MAAMmC,UAEZ,aAAbU,IACFD,EAAU,kBAACf,EAAD,CAAME,cAAezC,KAAKQ,eAErB,UAAb+C,IACFD,EAAU,kBAAC1B,EAAD,OAEK,aAAb2B,IACFD,EAAU,kBAACxB,EAAD,OAEK,YAAbyB,IACFD,EAAU,kBAACjB,EAAD,OAGX,IAAImB,EAAkB,kBAAC,EAAD,CAAiBtD,QAASF,KAAKgD,oBAErD,OACA,6BACC,yBAAK7C,UAAU,oBACd,kBAAC,EAAD,CAAKJ,MAAM,WAAWK,OAAQJ,KAAKU,MAAMmC,UAAW3C,QAAS,SAACU,GAAD,OAAO,EAAKJ,YAAYI,MACrF,kBAAC,EAAD,CAAKb,MAAM,QAAQK,OAAQJ,KAAKU,MAAMmC,UAAW3C,QAAS,SAACU,GAAD,OAAO,EAAKJ,YAAYI,MAClF,kBAAC,EAAD,CAAKb,MAAM,WAAWK,OAAQJ,KAAKU,MAAMmC,UAAW3C,QAAS,SAACU,GAAD,OAAO,EAAKJ,YAAYI,MACrF,kBAAC,EAAD,CAAKb,MAAM,UAAUK,OAAQJ,KAAKU,MAAMmC,UAAW3C,QAAS,SAACU,GAAD,OAAO,EAAKJ,YAAYI,OAEpF0C,EACAtD,KAAKU,MAAMoC,UAAYU,O,GA1DSC,IAAMnD,WCI3BoD,MARf,WACE,OACE,yBAAKvD,UAAU,OACb,kBAAC,EAAD,QCKcwD,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnD,SAASoD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.7c8f65ee.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nexport default class Tab extends Component{\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div title={this.props.title} onClick={this.props.onClick} className={[this.props.active === this.props.title && 'active', 'navbar-content'].join(' ')}>\r\n\t\t\t\t<p title={this.props.title}>{this.props.title}</p>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react'\r\n\r\nexport default class ExpImage extends Component{\r\n\r\n\t//Expandable Image\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t\tthis.state = {expanded: false}\r\n\t}\r\n\r\n\t// handleClick(e){\r\n\t// \tthis.setState(state => ({\r\n\t// \t\texpanded: !state.expanded\r\n\t// \t}));\r\n\t// }\r\n\r\n\thandleClick(e){\r\n\t\tvar cont = document.createElement('div');\r\n    \tvar bigImage = document.createElement('img');\r\n    \tcont.classList.add('whole-page');\r\n    \tcont.onclick = function(){\r\n    \t\tcont.parentNode.removeChild(cont);\r\n    \t}\r\n    \tbigImage.classList.add('large-in-charge');\r\n    \tbigImage.src = e.target.getAttribute('src');\r\n    \tcont.appendChild(bigImage);\r\n    \tdocument.querySelector('body').appendChild(cont)\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<img src={this.props.src} alt='' onClick={this.handleClick} />\r\n\t\t\t)\r\n\t}\r\n}","import React, {Component} from 'react'\r\nimport ExpImage from './expimage.js'\r\n\r\nexport default function About(){\r\n\treturn (\r\n\t\t<div class=\"body-container\">\r\n\t\t\t<div class=\"text\">\r\n\t\t\t\t<h1>My Life</h1>\r\n\t\t\t\t<p>I'm a sophomore CS Student at UCSB, graduating in 2022. I have plans to participate in the 5 year BS/MS Program to graduate with an MS in Computer Science in 23. After that, I don't really know what I want to do. There are so many options out there and I'd like to metaphorically shop around before I choose what I want to specialize in.</p>\r\n\t\t\t\t<ExpImage src='https://images.squarespace-cdn.com/content/v1/5af699e5c3c16a3922f8f0f6/1531812330123-RHVWYUVHXQQPNXYPT0KK/ke17ZwdGBToddI8pDm48kF6XmQBVZlvvJ0SVmgiS8kJZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpwxNEJmDBzRg8XZK26bl2cGOrIs4x3KMiyOodDqFSVNLq3sPAflOY5lB3Y5-FpRzI8/Screen+Shot+2018-07-17+at+12.25.12+AM.png?format=2500w' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}","import React from 'react'\r\n\r\nexport default function Projects(){\r\n\treturn(\r\n\t\t<div class=\"body-container\">\r\n\t\t\t<Project title=\"UCSBB\" desc=\"An app, built using React Native, that allows the user to find the nearest bathroom to them on campus using a map and a list of all bathrooms. Built for CS48 with Prof. Tobias Hollerer\" src='videos/vid1.mp4' />\r\n\t\t\t<Project title=\"Placeholder\" desc='Yet another Placeholder' src='videos/vid2.mp4' />\r\n\t\t\t<Project title='Placeholder 2' desc='Imagine I created a project that has something to do with this video :)' src='videos/vid2.mp4' />\r\n\t\t\t<Project title='Placeholder 2' desc='Imagine I created a project that has something to do with this video :)' src='videos/vid2.mp4' />\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nfunction Project(props){\r\n\treturn(\r\n\t\t<div className='project'>\r\n\t\t\t<span class='project-desc'>\r\n\t\t\t\t<h1>{props.title}</h1>\r\n\t\t\t\t<p>{props.desc}</p>\r\n\t\t\t</span>\r\n\t\t\t<video class='project-vid' width={640} height={480} controls>\r\n\t\t\t\t<source src={props.src} type='video/mp4' />\r\n\t\t\t</video>\r\n\t\t</div>\r\n\t\t)\r\n}","import React from 'react'\r\nimport ExpImage from './expimage.js'\r\n\r\nexport default function Contact(){\r\n\treturn (\r\n\t\t<div class=\"body-container\">\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<ExpImage src='email.png' />\r\n\t\t\t\t<a href='mailto://nick.arenberg22@gmail.com' class='button'>Email</a>\r\n\t\t\t</div>\r\n\t\t\t<div class='container'>\r\n\t\t\t\t<ExpImage src='https://1000logos.net/wp-content/uploads/2017/03/LinkedIn-Logo-500x500.png' />\r\n\t\t\t\t<a href='https://www.linkedin.com/in/nickarenberg/' class='button'>LinkedIn</a>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<ExpImage src='https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png' />\r\n\t\t\t\t<a href='https://github.com/narenberg' class='button'>Github</a>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}","import React from 'react'\r\nimport ExpImage from './expimage'\r\n\r\nexport default function Home(props){\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className='text' id='summary'>\r\n\t\t\t\t<h2>Computer Science Student at UCSB</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"body-container\">\r\n\t\t\t\t\r\n\t\t\t\t<div className='links-container'>\r\n\t\t\t\t\t<h2>Here's a little more about me</h2>\r\n\t\t\t\t\t<div className='button-container'>\r\n\t\t\t\t\t\t<a href='#' className='button' onClick={props.onButtonPress} title='About' >About Me</a>\r\n\t\t\t\t\t\t<a href='#' className='button' onClick={props.onButtonPress} title='Projects' >Projects</a>\r\n\t\t\t\t\t\t<a href='#' className='button' onClick={props.onButtonPress} title='Contact' >Contact Me</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ExpImage src=\"portrait.jpg\" id='portrait'/>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}","import React, {Component} from 'react'\r\nimport NavBar from './navbar.js'\r\n\r\nexport default class ScrollTopButton extends Component {\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<a href='#' class='button scroll-top-button' onClick={this.props.onClick} >Back To Top</a>\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\n","import React from 'react'\r\nimport Tab from './tab.js'\r\nimport About from './about.js'\r\nimport Projects from './projects.js'\r\nimport Contact from './contact.js'\r\nimport Home from './home.js'\r\nimport ScrollTopButton from './scrolltopbutton.js'\r\n\r\nexport default class NavBar extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {activeTab: 'Homepage', scrolled: false}\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t\tthis.handleScroll = this.handleScroll.bind(this)\r\n\t\tthis.handleScrollClick = this.handleScrollClick.bind(this)\r\n\t}\r\n\r\n\thandleClick = (e) => {\r\n\t\tthis.setState({activeTab: e.target.getAttribute('title')})\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\twindow.addEventListener('scroll', this.handleScroll)\r\n\t}\r\n\r\n\tcomponentWillUnmount(){\r\n\t\twindow.removeEventListener('scroll', this.handleScroll)\r\n\t}\r\n\r\n\thandleScrollClick(e){\r\n\t\twindow.scrollTo(0, 0)\r\n\t\tthis.setState({scrolled: false})\r\n\t}\r\n\r\n\thandleScroll(e){\r\n\t\tthis.setState({scrolled: true})\r\n\t\tif(window.scrollY <= 100) this.setState({scrolled: false})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst tabTitle = this.state.activeTab\r\n\t\tvar content\r\n\t\tif(tabTitle === 'Homepage'){\r\n\t\t\tcontent = <Home onButtonPress={this.handleClick} />\r\n\t\t}\r\n\t\tif(tabTitle === 'About'){\r\n\t\t\tcontent = <About />\r\n\t\t}\r\n\t\tif(tabTitle === 'Projects'){\r\n\t\t\tcontent = <Projects />\r\n\t\t}\r\n\t\tif(tabTitle === 'Contact'){\r\n\t\t\tcontent = <Contact />\r\n\t\t}\r\n\r\n\t\tvar scrollTopButton = <ScrollTopButton onClick={this.handleScrollClick} />\r\n\r\n\t\treturn(\r\n\t\t<div>\r\n\t\t\t<div className='navbar-container'>\r\n\t\t\t\t<Tab title='Homepage' active={this.state.activeTab} onClick={(e) => this.handleClick(e)}/>\r\n\t\t\t\t<Tab title='About' active={this.state.activeTab} onClick={(e) => this.handleClick(e)}/>\r\n\t\t\t\t<Tab title='Projects' active={this.state.activeTab} onClick={(e) => this.handleClick(e)}/>\r\n\t\t\t\t<Tab title='Contact' active={this.state.activeTab} onClick={(e) => this.handleClick(e)}/>\r\n\t\t\t</div>\r\n\t\t\t{content}\r\n\t\t\t{this.state.scrolled && scrollTopButton}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\nimport './App.css';\nimport NavBar from './components/navbar.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}